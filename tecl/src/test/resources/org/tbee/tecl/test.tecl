# This is the most simple configuration, if you need spaces or new lines you'll need quotes
title: "TECL rulez"
escaped: "escaped\"quote"
 
# We use ISO notations only, so no local styles, but using colons needs quoting
releaseDateTime: "2020-09-12T12:34:56"
 
# Multiline strings
description: "So,
I'm curious 
where this will end."

indented {
	description1: 	" 
					This should not be a problem
					Having indented multiple lines 
					"
	description2: 	"""    
					This should not be a problem
					Having indented multiple lines 
					"""
	description3: 	"""    
					{ "bla" : 3; } Braces and quotes should not be a problem
					"""
}
 
# Shorcut string; no quotes are needed in a simple property style assignment
# Or if a string is just one word. These strings are trimmed.
protocol: http
 
# Conditions allow for overriding, best match wins (most conditions)
# If multiple condition sets equally match, the first one will win.
title2[env=production]: "One config file to rule them all"
title2[env=production & os=osx]: "Even on Mac"
 
# Lists
hosts: [alpha, beta]
 
# Hierarchy is implemented using groups denoted by curly brackets
database {
 
    # indenting is allowed and encouraged, but has no semantic meaning
    url: "jdbc://..."
    user: "admin"
 
    # Strings support default encryption with a external key file, like maven
    password: "FGFGGHDRG#$BRTHT%G%GFGHFH%twercgfg"
 
    # groups can nest
    dialect {
        database: postgres
    }
}
 
servers {
    # This is a table:
    # - the first row is a header, containing the id's
    # - the remaining rows are values
    | name     | datacenter | maxSessions | settings                    |
    | alpha    | A          | 12          |                             |
    | beta     | XYZ        | 24          |                             |
    | "sys 2"  | B          | 6           |                             |
    # you can have sub blocks, which are id-less groups (id is the column)
    | gamma    | C          | 12          |                             |
    # or you reference to another block
    | tango    | D          | 24          | $/environment               |
}
 
# environments can be easily done using conditions
environment[env=development] {
    datasource: tst
}
environment[env=production] {
    datasource: prd
}

group1 { 
    key: value1 
    group2 {
        key: value2 
        group3 { 
            key: value3 
		    | id  | val  | 
		    | id0 | val0 |
		    | id1 | val1 |
		    | id2 | val2 |
        }
    }
    group2 {
        key: value2a 
    }
}
